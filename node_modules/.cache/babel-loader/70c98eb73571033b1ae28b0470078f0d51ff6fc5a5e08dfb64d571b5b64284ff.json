{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhone\\\\OneDrive\\\\Escritorio\\\\AppGremar\\\\frontend\\\\src\\\\api\\\\api.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentData() {\n  _s();\n  const [data, setData] = useState(null); // Mejor inicializar como null\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [DNI, setDNI] = useState();\n  const [NOMBRE, setNOMBRE] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/student/\");\n        if (!response.ok) {\n          throw new Error(\"Error al obtener los datos\");\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n        console.log(\"Data Fetched\");\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchfiltro = async NOMBRE => {\n    try {\n      const response = await fetch(`http://localhost:5000/student/${NOMBRE}`);\n      if (!response.ok) {\n        throw new Error(\"Error al obtener los datos\");\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n      console.log(\"Data Fetched\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No hay datos disponibles.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  const handleChange = event => {\n    setNOMBRE(event.target.value);\n    fetchfiltro(NOMBRE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Datos del estudiante\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      placeholder: \"Escribe algo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.GR, \" -\", student.DNI, \" - \", student.APELLIDOS_NOMBRES]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(StudentData, \"Ck+MWvo4dr5yQCg1HGSf3Kx3vOI=\");\n_c = StudentData;\nvar _c;\n$RefreshReg$(_c, \"StudentData\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","StudentData","_s","data","setData","error","setError","loading","setLoading","DNI","setDNI","NOMBRE","setNOMBRE","fetchData","response","fetch","ok","Error","result","json","message","console","log","fetchfiltro","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","event","target","value","type","inputValue","onChange","placeholder","map","student","GR","APELLIDOS_NOMBRES","id","_c","$RefreshReg$"],"sources":["C:/Users/jhone/OneDrive/Escritorio/AppGremar/frontend/src/api/api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function StudentData() {\r\n    const [data, setData] = useState(null); // Mejor inicializar como null\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [DNI, setDNI] = useState();\r\n    const [NOMBRE, setNOMBRE] = useState();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/student/\");\r\n                if (!response.ok) {\r\n                    throw new Error(\"Error al obtener los datos\");\r\n                }\r\n                const result = await response.json();\r\n                setData(result);\r\n            } catch (error) {\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n                console.log(\"Data Fetched\");\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n    const fetchfiltro = async (NOMBRE) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/student/${NOMBRE}`);\r\n            if (!response.ok) {\r\n                throw new Error(\"Error al obtener los datos\");\r\n            }\r\n            const result = await response.json();\r\n            setData(result);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n            console.log(\"Data Fetched\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Cargando datos...</p>;\r\n    if (error) return <p>Error: {error}</p>;\r\n    if (!data) return <p>No hay datos disponibles.</p>;\r\n\r\n    const handleChange = (event) => {\r\n        setNOMBRE(event.target.value);\r\n        fetchfiltro(NOMBRE);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Datos del estudiante</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                placeholder=\"Escribe algo...\"\r\n            />\r\n            <ul>\r\n                {data.map((student) => (\r\n                    <li key={student.id}>\r\n                        {student.GR} -{student.DNI} - {student.APELLIDOS_NOMBRES}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}