{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import'../css/app.css';import EditModal from\"../components/model\";import StudentTable from\"./StudentTable\";import Pagination from\"./Pagination\";import AddStudentModal from\"./AddStudenModal\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function StudentData(_ref){let{URL}=_ref;const[data,setData]=useState([]);const[error,setError]=useState(null);const[loading,setLoading]=useState(true);const[nombre,setNombre]=useState(\"\");const[currentPage,setCurrentPage]=useState(1);const[selectedStudent,setSelectedStudent]=useState(null);const[isModalOpen,setIsModalOpen]=useState(false);const[isAddModalOpen,setIsAddModalOpen]=useState(false);// Estado para el modal de agregar\nconst studentsPerPage=40;// Obtener todos los estudiantes\nconst fetchData=async()=>{setLoading(true);try{const response=await fetch(`${URL}/student/`);if(!response.ok)throw new Error(\"Error al obtener los datos\");const result=await response.json();setData(result);}catch(error){setError(error.message);}finally{setLoading(false);}};useEffect(()=>{fetchData();},[URL]);const handleChange=event=>{const nombre=event.target.value;setNombre(nombre);nombre.trim()?fetchFiltro(nombre):fetchData();setCurrentPage(1);};// Filtrar por nombre\nconst fetchFiltro=async nombre=>{try{const response=await fetch(`${URL}/student/BUSCAR?nombre=${nombre}`);if(!response.ok)throw new Error(\"Error al obtener los datos\");const result=await response.json();setData(result);}catch(error){setError(error.message);}};const handleView=student=>{setSelectedStudent(student);setIsModalOpen(true);};const handleCloseModal=()=>{setIsModalOpen(false);setSelectedStudent(null);};const handleUpdate=updatedStudent=>{const updatedData=data.map(student=>student.id===updatedStudent.id?updatedStudent:student);setData(updatedData);};const handleDelete=id=>alert(`Eliminar estudiante con ID: ${id}`);// Función para agregar un nuevo estudiante\nconst handleAddStudent=async newStudent=>{try{const response=await fetch(`${URL}student/agregar`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newStudent)});if(!response.ok)throw new Error('Error al agregar el estudiante');const result=await response.json();setData([...data,result]);// Agrega el nuevo estudiante al estado local\n}catch(error){console.error('Error al agregar el estudiante:',error);}};if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando datos...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{style:{color:\"red\"},children:[\"Error: \",error]});const indexOfLastStudent=currentPage*studentsPerPage;const indexOfFirstStudent=indexOfLastStudent-studentsPerPage;const currentStudents=data.slice(indexOfFirstStudent,indexOfLastStudent);const totalPages=Math.ceil(data.length/studentsPerPage);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Datos del Estudiante\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nombre,onChange:handleChange,placeholder:\"Escribe el nombre...\",className:\"input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button button-primary\",onClick:()=>setIsAddModalOpen(true),children:\"Agregar\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button button-primary\",onClick:()=>alert(\"Exportar a EXCEL\"),children:\"Exportar EXCEL\"})]}),/*#__PURE__*/_jsx(StudentTable,{students:currentStudents,onView:handleView,onDelete:handleDelete}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:setCurrentPage}),isModalOpen&&selectedStudent&&/*#__PURE__*/_jsx(EditModal,{data:selectedStudent,onClose:handleCloseModal,onSave:handleUpdate,URL:URL}),isAddModalOpen&&/*#__PURE__*/_jsx(AddStudentModal,{isOpen:isAddModalOpen,onClose:()=>setIsAddModalOpen(false),onAdd:handleAddStudent})]});}","map":{"version":3,"names":["React","useState","useEffect","EditModal","StudentTable","Pagination","AddStudentModal","jsx","_jsx","jsxs","_jsxs","StudentData","_ref","URL","data","setData","error","setError","loading","setLoading","nombre","setNombre","currentPage","setCurrentPage","selectedStudent","setSelectedStudent","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","studentsPerPage","fetchData","response","fetch","ok","Error","result","json","message","handleChange","event","target","value","trim","fetchFiltro","handleView","student","handleCloseModal","handleUpdate","updatedStudent","updatedData","map","id","handleDelete","alert","handleAddStudent","newStudent","method","headers","body","JSON","stringify","console","children","style","color","indexOfLastStudent","indexOfFirstStudent","currentStudents","slice","totalPages","Math","ceil","length","className","type","onChange","placeholder","onClick","students","onView","onDelete","onPageChange","onClose","onSave","isOpen","onAdd"],"sources":["C:/Users/jhone/OneDrive/Escritorio/AppGremar/frontend/src/components/StudentData.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../css/app.css';\r\nimport EditModal from \"../components/model\";\r\nimport StudentTable from \"./StudentTable\";\r\nimport Pagination from \"./Pagination\";\r\nimport AddStudentModal from \"./AddStudenModal\";\r\nexport default function StudentData({ URL }) {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedStudent, setSelectedStudent] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false); // Estado para el modal de agregar\r\n    const studentsPerPage = 40;\r\n\r\n    // Obtener todos los estudiantes\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${URL}/student/`);\r\n            if (!response.ok) throw new Error(\"Error al obtener los datos\");\r\n            const result = await response.json();\r\n            setData(result);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [URL]);\r\n\r\n    const handleChange = (event) => {\r\n        const nombre = event.target.value;\r\n        setNombre(nombre);\r\n        nombre.trim() ? fetchFiltro(nombre) : fetchData();\r\n        setCurrentPage(1);\r\n    };\r\n // Filtrar por nombre\r\n const fetchFiltro = async (nombre) => {\r\n    try {\r\n        const response = await fetch(`${URL}/student/BUSCAR?nombre=${nombre}`);\r\n        if (!response.ok) throw new Error(\"Error al obtener los datos\");\r\n        const result = await response.json();\r\n        setData(result);\r\n    } catch (error) {\r\n        setError(error.message);\r\n    }\r\n};\r\n    const handleView = (student) => {\r\n        setSelectedStudent(student);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsModalOpen(false);\r\n        setSelectedStudent(null);\r\n    };\r\n\r\n    const handleUpdate = (updatedStudent) => {\r\n        const updatedData = data.map((student) =>\r\n            student.id === updatedStudent.id ? updatedStudent : student\r\n        );\r\n        setData(updatedData);\r\n    };\r\n\r\n    const handleDelete = (id) => alert(`Eliminar estudiante con ID: ${id}`);\r\n\r\n    // Función para agregar un nuevo estudiante\r\n    const handleAddStudent = async (newStudent) => {\r\n        try {\r\n            const response = await fetch(`${URL}student/agregar`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newStudent),\r\n            });\r\n            if (!response.ok) throw new Error('Error al agregar el estudiante');\r\n            const result = await response.json();\r\n            setData([...data, result]); // Agrega el nuevo estudiante al estado local\r\n        } catch (error) {\r\n            console.error('Error al agregar el estudiante:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Cargando datos...</p>;\r\n    if (error) return <p style={{ color: \"red\" }}>Error: {error}</p>;\r\n\r\n    const indexOfLastStudent = currentPage * studentsPerPage;\r\n    const indexOfFirstStudent = indexOfLastStudent - studentsPerPage;\r\n    const currentStudents = data.slice(indexOfFirstStudent, indexOfLastStudent);\r\n    const totalPages = Math.ceil(data.length / studentsPerPage);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Datos del Estudiante</h1>\r\n            <div className=\"flex gap-2 mb-4\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={nombre}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Escribe el nombre...\"\r\n                    className=\"input\"\r\n                />\r\n                <button className=\"button button-primary\" onClick={() => setIsAddModalOpen(true)}>Agregar</button>\r\n                <button className=\"button button-primary\" onClick={() => alert(\"Exportar a EXCEL\")}>Exportar EXCEL</button>\r\n            </div>\r\n\r\n            <StudentTable\r\n                students={currentStudents}\r\n                onView={handleView}\r\n                onDelete={handleDelete}\r\n            />\r\n\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={setCurrentPage}\r\n            />\r\n\r\n            {isModalOpen && selectedStudent && (\r\n                <EditModal\r\n                    data={selectedStudent}\r\n                    onClose={handleCloseModal}\r\n                    onSave={handleUpdate}\r\n                    URL={URL}\r\n                />\r\n            )}\r\n\r\n            {isAddModalOpen && (\r\n                <AddStudentModal\r\n                    isOpen={isAddModalOpen}\r\n                    onClose={() => setIsAddModalOpen(false)}\r\n                    onAdd={handleAddStudent}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}